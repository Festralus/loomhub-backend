// File was generated by AI

const mongoose = require("mongoose");
const dotenv = require("dotenv");
const { v4: uuidv4 } = require("uuid");
dotenv.config();

// Mongoose models
const User = require("../models/User");
const ProductReview = require("../models/ProductReview");
const Product = require("../models/Product");

// 20 predefined review comments
const comments = [
  "Really impressed with the quality. Comfortable, stylish, and fits well.",
  "Great buy! The material feels nice and the fit is exactly as expected.",
  "Very happy with this purchase. Good value for money and looks fantastic.",
  "Soft, durable, and looks even better in person. Totally recommend it!",
  "Stylish and practical. I wear it almost every day and it still looks new.",
  "Fit was perfect right out of the box. The design is even better up close!",
  "Surprised by how comfortable and flexible they are. Perfect for daily use.",
  "I was a little skeptical but honestly, this exceeded my expectations.",
  "Superb quality, quick shipping, and the color is exactly what I wanted.",
  "Love the look and feel. It’s versatile enough for both work and weekends.",
  "Ordered my usual size and it fit perfectly. It’s super flattering and comfy.",
  "These have quickly become my go-to! The construction feels really solid too.",
  "The details are great – stitching, material, and overall fit are on point.",
  "After a few wears, they still look and feel brand new. Really impressed!",
  "I’ve gotten so many compliments every time I wear this. Highly recommend!",
  "The attention to detail is outstanding. You can tell it's made to last. Very breathable too, which surprised me, especially given the sturdy feel. Overall a solid purchase!",
  "I bought this mainly for work but ended up wearing it everywhere. Whether it’s casual outings, a day at the office, or even quick trips, it’s versatile, super comfy, and has held up perfectly.",
  "I was worried about sizing, but it turned out to be a perfect match. The quality exceeded what I expected at this price point. Great fabric, excellent craftsmanship, and still lightweight enough for everyday use.",
  "Absolutely love this! The moment I tried it on, it felt like it was made for me. The cut is very flattering without feeling restrictive, and the materials used feel both premium and durable. It's held up through several washes without losing shape or color, and the stitching is incredibly neat. I’ll definitely buy more.",
  "One of the best clothing purchases I’ve made this year! From the unboxing experience to the first wear, everything exceeded my expectations. The fit is true to size, the fabric feels amazing against the skin, and the durability is evident from the careful stitching and premium finish. It moves with you naturally, doesn’t wrinkle easily, and stands up well to daily wear. Plus, the design is so versatile that I can dress it up or down effortlessly depending on the occasion. Highly recommended for anyone looking for a staple piece that’ll last.",
];

// Helper to pick random comment
const getRandomComment = () =>
  comments[Math.floor(Math.random() * comments.length)];

/**
 * Helper to generate a random date in the last 365 days
 */
const getRandomDate = () => {
  const today = new Date();
  const lastYear = today.getFullYear() - 1;
  const startDate = new Date(lastYear, today.getMonth(), today.getDate()); // 365 days ago

  // Randomize date between today and startDate
  const randomTime =
    startDate.getTime() +
    Math.random() * (today.getTime() - startDate.getTime());

  return new Date(randomTime);
};

/**
 * Function to generate reviews for a specific product
 * @param {string} productGID - GID of the product to add reviews for
 * @param {number} count - How many reviews you want to create
 */
const generateProductReviewsForProduct = async (productGID, count = 10) => {
  try {
    // Connect if not connected already
    // if (mongoose.connection.readyState === 0) {
    //   await mongoose.connect(process.env.MONGODB_URI, {
    //     useNewUrlParser: true,
    //     useUnifiedTopology: true,
    //   });
    // }

    const users = await User.find({});
    if (!users.length) {
      throw new Error("No users found in the database to assign reviews.");
    }

    const productReviews = Array.from({ length: count }, () => {
      const randomUser = users[Math.floor(Math.random() * users.length)];
      const randomRating = Math.floor(Math.random() * 4) + 2; // 2, 3, 4, 5
      const uuid = uuidv4(); // generate random UUID
      const randomDate = getRandomDate(); // Generate random date

      return {
        product: productGID,
        user: randomUser.GID, // using user's GID
        rating: randomRating,
        comment: getRandomComment(),
        GID: `product_review-${uuid}`, // final correct GID
        createdAt: randomDate, // Override `createdAt` with the random date
        updatedAt: randomDate, // Optionally override updatedAt if you want it to be the same
      };
    });

    await ProductReview.insertMany(productReviews);

    console.log(
      `Successfully created ${productReviews.length} product reviews for product GID: ${productGID}`
    );
  } catch (error) {
    console.error("Error generating product reviews:", error);
  }
  // finally {
  //   mongoose.connection.close();
  // }
};

// Example usage
// (async () => {
//   await generateProductReviewsForProduct(
//     "item-ce3a3f69-9886-465e-a5d6-a936854bebcc",
//     Math.ceil(Math.random() * 15 + 6)
//   );
// })();

async function autoFillReviews() {
  try {
    if (mongoose.connection.readyState === 0) {
      await mongoose.connect(process.env.MONGODB_URI, {
        useNewUrlParser: true,
        useUnifiedTopology: true,
      });
    }

    const products = await Product.find({});
    if (!products.length) return;

    for (const product of products) {
      await generateProductReviewsForProduct(
        product.GID,
        Math.ceil(Math.random() * 15 + 6)
      );
    }
  } catch (error) {
    console.error("Error generating product reviews:", error);
  } finally {
    await mongoose.connection.close();
  }
}

autoFillReviews();

module.exports = { generateProductReviewsForProduct };
